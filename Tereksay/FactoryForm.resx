<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Info1_Label.Text" xml:space="preserve">
    <value>Обогатительная фабрика - горное предприятие для первичной переработки твёрдых
полезных ископаемых с целью получения технически ценных продуктов, пригодных для
промышленного использования. Часто обогатительная фабрика входит в состав
горно-обогатительного комбината.
С помощью различных технологий (флотация, магнитная сепарация и других) на
обогатительных фабриках из добытой руды получают концентрат, в котором содержание
полезного компонента намного выше, чем в исходном сырье.
На обогатительных фабриках перерабатываются (обогащаются) руды цветных металлов, руды
чёрных металлов, неметаллические полезные ископаемые и уголь.
С того момента и по сегодняшний день, Компания "Эти Бакыр Терексай" выполняет все взятые
на себя обязательства.
Так, в 2016 году были начаты работы по модернизации старой обогатительной 
(флотационной) фабрики. Установлено новое современное оборудование, в том
числе дробилка, мельница и т.п. Весь процесс на фабрике осуществляется путем 
автоматической систематизации. Мощность новой модернизированной 
обогатительной фабрики составляет 100 тысяч тонн в год.
Расходы на ее модернизацию составили около 7 млн долларов США.
С момента начала модернизации и ввода в эксплуатацию обогатительной фабрики,
работой были обеспечены 352 человека, из которых 96% составляли местные жители.
На сегодняшний день, модернизированная обогатительная фабрика успешно работает и
производит золото-серебро содержащий концентрат.</value>
  </data>
  <data name="Info2_Label.Text" xml:space="preserve">
    <value>В результате интенсивных геологоразведочных работ, запасы месторождений
«Тереккан» и «Терек» были уточнены и на основании этого была обоснована
необходимость строительства новой золотоизвлекательной фабрики для получения
сплава Доре.
При успешном прохождении всех соответствующих государственных экспертиз
технического проекта Компания в конце 2019 года намерена начать строительство
золотоизвлекательной фабрики (ЗИФ) с хвостохранилищем и объектами
инфраструктур.
Строительство будет осуществляться в строгом соответствии требованиям,
установленным для данного вида объекта, с применением высококачественных
материалов и оборудований, отвечающих требованиям мирового стандарта, с
обязательным соблюдением экологической безопасности и охраны окружающей
среды.
С начала строительства ЗИФ с хвостохранилищем и объектов инфраструктуры,
количество работников, которые на сентябрь 2019 года составляют около 300
человек, достигнет до 500-600 человек, из которых 90% безусловно составят местные
жители.
Кроме этого, с момента запуска ЗИФ, сумма обязательного социального пакета
будет составлять уже 20 млн сом, а налоговые отчисления как в республиканский,
так и в местный бюджеты увеличатся в несколько раз</value>
  </data>
</root>